{"version":3,"sources":["components/topbar/logo/Logo.tsx","components/data/dataDay.tsx","components/topbar/inputpanel/InputPanel.tsx","components/topbar/tLanguage/Language.tsx","components/topbar/TopBur.tsx","components/widgetWeather/topW/inWeatherTop.tsx","components/widgetWeather/topW/TopWeather.tsx","components/widgetWeather/showW/miniInf/MiniInfo.tsx","components/widgetWeather/showW/miniInf/InfoDay.tsx","components/widgetWeather/showW/leftInf/LeftInf.tsx","components/widgetWeather/showW/ShowWeather.tsx","components/widgetWeather/MainWeather.tsx","components/App.tsx","serviceWorker.ts","components/data/transformArr.tsx","components/data/arrayAllDays.tsx","redux/rootReducer.tsx","index.tsx"],"names":["Logo","style","fontSize","fontFamily","dataDay","a","city","axios","get","res","data","coord","lat","lon","resOneCall","connect","state","dataDays","dispatch","findCity","name","type","dataF","cName","useState","cityName","setCityName","errorF","setErrorF","findCityBTN","then","catch","setTimeout","display","flexDirection","className","onKeyDown","e","key","value","onChange","event","target","handleChange","placeholder","onClick","marginTop","Language","href","TopBar","ShowW","el","maxT","tMax","minT","tMin","to","num","activeClassName","day","month","height","src","img","alt","createDataDay","goDate","setGoDate","useEffect","setInterval","nowDate","Date","year","getFullYear","getDate","setDataDayNow","length","getMonth","hours","getHours","minute","getMinutes","sec","getSeconds","setTime","showW","arrTopW","map","idx","MiniInfo","arr","temp","time","humidity","imgW","tempW","InfoDay","miniInf","timeTwo","LeftInf","infDay","numDay","nameDay","tempToday","likeTemp","winter","speedWinter","pressure","yearsNum","numMonth","TempLefy","LikeT","width","Math","floor","dataDaysShow","findDay","useParams","console","log","allDays","undefined","oneDayData","MainWeather","alignItems","path","exact","component","ShowWeather","App","background","justifyContent","color","Boolean","window","location","hostname","match","transformArr","daily","n","dateDays","i","today","setDate","getNewData","numDayGet","nameToday","getDay","numMonths","tempAllDay","filter","dt","allDayTemp","weather","icon","min","max","arrayAllDays","arrFive","arrOneCall","list","getDaySet","getD","dataArrTrans","setMilliseconds","allDateTemp","undefinedReq","unfReq","paramReq","main","tempAllDayOneCall","allDayTempOneCall","getNewDataOneCall","toString","substr","feels_like","wind_deg","wind_speed","initialState","dataOneCall","page","store","createStore","action","datDataW","newPage","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a0d8903b.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nconst Logo: FC = () => {\n  return (\n      <div>\n    <p style={{fontSize: '2em', fontFamily: \"'Grandstander', cursive\"}}>\n     WeatherToday\n    </p>\n      </div>\n  );\n};\n\nexport default Logo;\n","import axios from \"axios\";\r\n\r\nexport async function dataDay (city = 'Kyiv') {\r\n    const res = await axios.get(\r\n            `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=fb29f9e6a701cff969bb669dc0bd7c35`\r\n        );\r\n    const coord = await res.data.city.coord\r\n    const resOneCall = await axios.get(\r\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&exclude=hourly&appid=fb29f9e6a701cff969bb669dc0bd7c35`\r\n        );\r\n    return [res.data, resOneCall.data]\r\n\r\n}\r\n","import React, { FC, useState } from \"react\";\nimport \"./inputPanel.scss\";\nimport { dataDay } from \"../../data/dataDay\";\nimport { connect } from \"react-redux\";\n\nconst InputPanel: FC<any> = ({ findCity }) => {\n  let [cityName, setCityName] = useState(\"\");\n  let [errorF, setErrorF] = useState(false);\n  const findCityBTN = () => {\n    dataDay(cityName)\n      .then((data) => findCity(data, cityName))\n      .catch(() => {\n        setErrorF(true);\n        setTimeout(() => {\n          setErrorF(false);\n        }, 4000);\n      });\n    setCityName(\"\");\n  };\n  const handleChange = (event: any) => {\n    setCityName(event.target.value);\n  };\n  const _handleKeyDown = (e: any) => {\n    if (e.key === \"Enter\") {\n      findCityBTN();\n    }\n  };\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <div className={\"find-div\"}>\n        <input\n          className={\"find-style\"}\n          onKeyDown={_handleKeyDown}\n          value={cityName}\n          onChange={(event) => handleChange(event)}\n          type=\"text\"\n          placeholder={\"введите название города\"}\n        />\n        <button onClick={() => findCityBTN()} className={\"find-btn\"}>\n          искать\n        </button>\n      </div>\n      {errorF ? (\n        <p style={{ marginTop: \"8px\" }}>название города введено некоректно</p>\n      ) : null}\n    </div>\n  );\n};\n\nfunction mapStateToProps(state: any) {\n  return { dataDays: state };\n}\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    findCity: (data: any, name: any) =>\n      dispatch({ type: \"FIND_CITY\", dataF: data, cName: name }),\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(InputPanel);\n","import React, { FC } from \"react\";\r\nimport \"./Language.scss\";\r\n\r\nconst Language: FC = () => {\r\n  return (\r\n    <div className={\"lang-style\"}>\r\n      <a href={\"/\"}>рус</a>\r\n      <a href={\"/\"}>eng</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Language;\r\n","import React, {FC} from \"react\";\r\nimport Logo from \"./logo/Logo\";\r\nimport InputPanel from \"./inputpanel/InputPanel\";\r\nimport Language from \"./tLanguage/Language\";\r\nimport './TopBar.scss'\r\nconst TopBar: FC = () => {\r\n    return (\r\n        <div className={'top-bar'}>\r\n           <Logo />\r\n           <InputPanel />\r\n           <Language />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { FC } from \"react\";\nimport \"./TopWeather.scss\";\nimport { NavLink } from \"react-router-dom\";\n\ntype testDaysWeather = {\n  day: string;\n  num: number;\n  month: string;\n  numMonth: any;\n  img: string;\n  tMin: number;\n  tMax: number;\n};\ntype arrProps = {\n  el: testDaysWeather;\n};\nconst ShowW: FC<arrProps> = ({ el }) => {\n  let maxT: string = \"+1\";\n  if (el.tMax > 0) {\n    maxT = `+${el.tMax}`;\n  }\n  let minT: string = \"+1\";\n  if (el.tMin > 0) {\n    minT = `+${el.tMin}`;\n  }\n  return (\n    <NavLink\n      to={`/day/${el.num}`}\n      className={\"linkNav\"}\n      activeClassName={\"Active-w\"}\n    >\n      <div className={\"weather-w\"}>\n        <div className={\"one_div\"}>\n          <p>{el.day}</p>\n        </div>\n        <div className={\"two_div\"}>\n          <p>{el.num}</p>\n        </div>\n        <div className={\"three_div\"}>\n          <p>{el.month}</p>\n        </div>\n        <div className={\"foo_div\"}>\n          <img\n            style={{ height: \"70px\" }}\n            src={`https://openweathermap.org/img/wn/${el.img}@2x.png`}\n            alt={\"weather\"}\n          />\n        </div>\n        <div className={\"five_div\"}>\n          <div>\n            <p className={\"s-t\"}>мин.</p>\n            <p className={\"s-tm\"}>{minT}</p>\n          </div>\n          <div>\n            <p className={\"s-m\"}>макс.</p>\n            <p className={\"s-tm\"}>{maxT}</p>\n          </div>\n        </div>\n      </div>\n    </NavLink>\n  );\n};\n\nexport default ShowW;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { dataDay } from \"./../../data/dataDay\";\n\nimport \"./TopWeather.scss\";\nimport ShowW from \"./inWeatherTop\";\ntype typeTopW = {\n  createDataDay: any;\n  dataDays: any;\n};\n\nconst TopWeather: FC<typeTopW> = ({ createDataDay, dataDays }) => {\n  const [goDate, setGoDate] = useState<any>(\"\");\n  const setTime = () => {\n    let nowDate: any = new Date();\n    let year: number = nowDate.getFullYear();\n\n    let day = nowDate.getDate() + \"\";\n\n    const setDataDayNow = (num: string) => {\n      if (num.length === 1) {\n        return \"0\" + num;\n      } else {\n        return num;\n      }\n    };\n    let month = nowDate.getMonth() + 1;\n    let hours = nowDate.getHours() + \"\";\n    let minute = nowDate.getMinutes() + \"\";\n    let sec = nowDate.getSeconds() + \"\";\n    return `${setDataDayNow(day)}.${month}.${year} ${hours}:${setDataDayNow(\n      minute\n    )}:${setDataDayNow(sec)}`;\n  };\n  useEffect(() => {\n    dataDay().then((data) => createDataDay(data));\n    setInterval(() => {\n      setGoDate(setTime());\n    }, 1000);\n  }, []);\n\n  // console.log(new Date());\n  const showW = dataDays.arrTopW.map((el: any, idx: number) => {\n    return <ShowW key={idx} el={el} />;\n  });\n  return (\n    <div>\n      <div className={\"pStyleCityTime\"}>\n        <span className={\"styleCity\"}>{dataDays.cityName}</span>555 &nbsp;&nbsp;\n        <span className={\"styleTime\"}>{goDate}</span>\n      </div>\n      <div className={\"container-w\"}>{showW}</div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state: any) {\n  return { dataDays: state };\n}\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    createDataDay: (data: any) => dispatch({ type: \"CREATE_DATE\", data: data }),\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TopWeather);\n","import React, { FC } from \"react\";\nimport \"./MiniInfo.scss\";\nimport { timeFS } from \"../ShowWeather\";\ninterface typeMiniInf {\n  arr: timeFS;\n}\nconst MiniInfo: FC<typeMiniInf> = ({ arr: { img, temp, time, humidity } }) => {\n  let imgW = \"\";\n  if (img === \"--\") {\n    imgW = \"04n\";\n  } else {\n    imgW = img;\n  }\n  let tempW: string = \"+1\";\n  if (temp > 0) {\n    tempW = `+${temp}`;\n  } else {\n    tempW = `${temp}`;\n  }\n\n  return (\n    <>\n      <div className={\"into-block\"}>\n        <div className={\"img-time\"}>\n          <div className={\"time-w\"}>\n            <p>{time}</p>\n          </div>\n          <div className={\"img-w\"}>\n            <img\n              height=\"40\"\n              src={`https://openweathermap.org/img/wn/${imgW}@2x.png`}\n              alt=\"day, weather\"\n            />\n          </div>\n        </div>\n        <div className={\"tempBlock\"}>\n          <p>{tempW}&deg;C</p>\n        </div>\n      </div>\n      <div className={\"humidity-style\"}>\n        <p>влажность: {humidity} %</p>\n      </div>\n    </>\n  );\n};\n\nexport default MiniInfo;\n","import React, { FC } from \"react\";\nimport MiniInfo from \"./MiniInfo\";\nimport { timeFS } from \"../ShowWeather\";\n\ninterface typeInfDay {\n  name: string;\n  timeTwo: Array<timeFS>;\n}\nconst InfoDay: FC<typeInfDay> = ({ name, timeTwo }) => {\n  const miniInf = timeTwo.map((arr, idx: number) => {\n    return <MiniInfo key={idx} arr={arr} />;\n  });\n  return (\n    <div className={\"miniBlock\"}>\n      <div className={\"day-inf\"}>\n        <p>{name}</p>\n      </div>\n      {miniInf}\n    </div>\n  );\n};\n\nexport default InfoDay;\n","import React, { FC } from \"react\";\nimport \"./LeftInf.scss\";\n\nconst LeftInf: FC<any> = ({ infDay }) => {\n  const {\n    numDay,\n    nameDay,\n    tempToday,\n    likeTemp,\n    winter,\n    img,\n    speedWinter,\n    humidity,\n    pressure,\n    yearsNum,\n    numMonth,\n  } = infDay;\n  let TempLefy = \"1\";\n  if (tempToday > 0) {\n    TempLefy = `+${tempToday}`;\n  } else {\n    TempLefy = `${tempToday}`;\n  }\n  let LikeT = \"1\";\n  if (tempToday > 0) {\n    LikeT = `+${likeTemp}`;\n  } else {\n    LikeT = `${likeTemp}`;\n  }\n\n  return (\n    <div className={\"leftInf-style\"}>\n      <p className={\"day-style-left\"}>\n        {nameDay} {numDay}.{numMonth}.{yearsNum}\n      </p>\n      <div className={\"temp-left\"}>\n        <img\n          width={70}\n          src={`https://openweathermap.org/img/wn/${img}@2x.png`}\n          alt={\"weather\"}\n        />\n        <p>{TempLefy}&deg;C</p>\n      </div>\n      <p className={\"like-temp\"}>чувствуется как: {LikeT}&deg;C</p>\n      <div>\n        <div>\n          <p>Давлен.: {pressure} hPa</p>\n          <p>Скор. ветра: {Math.floor(speedWinter)} м.с</p>\n        </div>\n        <div>\n          <p>Влажность: {humidity}%</p>\n          <p>напр. ветра: {winter}&deg;</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftInf;\n","import React, { FC, useEffect, useState } from \"react\";\nimport \"./ShowWeather.scss\";\nimport InfoDay from \"./miniInf/InfoDay\";\nimport LeftInf from \"./leftInf/LeftInf\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nexport type timeFS = {\n  time: any;\n  img: any;\n  temp: any;\n  humidity: any;\n};\n\ntype typeProps = {\n  dataDaysShow: any;\n  findDay: any;\n  dataDay: any;\n};\nconst ShowWeather: FC<typeProps> = ({ dataDaysShow, findDay, dataDay }) => {\n  const { num } = useParams();\n\n  useEffect(() => {\n    findDay(num);\n  }, [num]);\n  console.log(\"show w\", dataDaysShow);\n  useEffect(() => {\n    if (dataDaysShow.allDays === null) {\n      console.log(\"null\");\n    } else {\n      dataDay();\n    }\n  }, [dataDaysShow.allDays]);\n  ////1. redirect if num = undefined + , and if num !== allDays with array\n  if (\n    num === undefined ||\n    num < new Date().getDate() ||\n    num > new Date().getDate() + 4\n  ) {\n    console.log(\"ничего\");\n\n    return <Redirect to={`/day/${new Date().getDate()}`} />;\n  }\n  // if (+num === 60) {\n  //   console.log(num, dataDaysShow);\n  //   return <Redirect to={`/day/${new Date().getDate()}`} />;\n  // }\n  if (dataDaysShow.oneDayData === null) {\n    return null;\n  }\n\n  let infDay = dataDaysShow.oneDayData[0].temp.map((el: any, idx: number) => {\n    return <InfoDay key={idx} name={el.name} timeTwo={el.timeTwo} />;\n  });\n\n  return (\n    <>\n      <div className={\"main-weather\"}>\n        <LeftInf infDay={dataDaysShow.oneDayData[0]} />\n        <div>{infDay}</div>\n      </div>\n    </>\n  );\n};\nfunction mapStateToProps(state: any) {\n  return { dataDaysShow: state };\n}\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    findDay: (num: any) => dispatch({ type: \"FIND_DAY\", numDay: num }),\n    dataDay: () => dispatch({ type: \"DATA_DAY\" }),\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowWeather);\n","import React, { FC } from \"react\";\nimport TopWeather from \"./topW/TopWeather\";\nimport ShowWeather from \"./showW/ShowWeather\";\nimport {Route} from \"react-router\";\n\nconst MainWeather: FC = () => {\n  return (\n    <div style={{\n        width: \"800px\",\n        display: \"flex\",\n        flexDirection: 'column',\n        alignItems: 'center'\n    }}>\n      <TopWeather />\n        <Route path=\"/\" exact component={ShowWeather}/>\n        <Route path=\"/day/:num\" component={ShowWeather}/>\n\n    </div>\n  );\n};\n\nexport default MainWeather;\n","import React, { FC } from \"react\";\nimport \"./App.scss\";\nimport TopBar from \"./topbar/TopBur\";\nimport MainWeather from \"./widgetWeather/MainWeather\";\n\nconst App: FC = () => {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <MainWeather />\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            background: '#2A0A0A' ,\n            height: \"40px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: 'center'\n          }}\n        >\n        <p style={{ color: \"#fff\", fontSize: '0.8em' }}>copyright © Shevchenko David 2020</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function transformArr(data: any){\r\n    const { daily} = data;\r\n\r\n    function getWeekMonths(n: any) {\r\n        let month = [\r\n            \"января\",\r\n            \"февраля\",\r\n            \"марта\",\r\n            \"апреля\",\r\n            \"мая\",\r\n            \"июня\",\r\n            \"июля\",\r\n            \"августа\",\r\n            \"сентября\",\r\n            \"октября\",\r\n            \"ноября\",\r\n            \"декабря\",\r\n        ];\r\n        return month[n];\r\n    }\r\n    function getWeekDay(date: any) {\r\n        let days = [\r\n            \"Воскресение\",\r\n            \"Понедельник\",\r\n            \"Вторник\",\r\n            \"Среда\",\r\n            \"Четверг\",\r\n            \"Пятница\",\r\n            \"Суббота\",\r\n        ];\r\n        return days[date.getDay()];\r\n    }\r\n    const getNewData = (i: any) => {\r\n        let today = new Date();\r\n        return new Date(today.setDate(today.getDate() + i));\r\n    };\r\n    const allDayTemp = (numDayGet: any) => {\r\n        return daily.filter((el: any) => {\r\n            let dataReturn = new Date(el.dt * 1000);\r\n\r\n            return dataReturn.getDate() === numDayGet;\r\n        });\r\n    };\r\n\r\n    const arrCountDay = [0, 1, 2, 3, 4];\r\n    type testDaysWeather = {\r\n        day: string;\r\n        num: number;\r\n        month: string;\r\n        numMonth: any;\r\n        img: string;\r\n        tMin: number;\r\n        tMax: number;\r\n    };\r\n    return  arrCountDay.map((num) : testDaysWeather => {\r\n        //текущий день\r\n        const dateDays = getNewData(num);\r\n        // //номер дня\r\n        const numDayGet = dateDays.getDate();\r\n        //имя дня\r\n        const nameToday = getWeekDay(dateDays);\r\n        const numMonths = dateDays.getMonth() + 1;\r\n        // //температура на весь день\r\n        let tempAllDay = allDayTemp(numDayGet);\r\n        return {\r\n            day: nameToday,\r\n            num: numDayGet,\r\n            month: getWeekMonths(numMonths - 1),\r\n            numMonth: numMonths,\r\n            img: tempAllDay[0].weather[0].icon,\r\n            tMin: Math.floor(tempAllDay[0].temp.min - 272),\r\n            tMax: Math.floor(tempAllDay[0].temp.max - 272)\r\n        };\r\n    });\r\n\r\n}","export function arrayAllDays(arrFive: any, arrOneCall: any): any {\n  const { list } = arrFive;\n  function getWeekDay(date: any) {\n    let days = [\n      \"Воскресение\",\n      \"Понедельник\",\n      \"Вторник\",\n      \"Среда\",\n      \"Четверг\",\n      \"Пятница\",\n      \"Суббота\",\n    ];\n    return days[date.getDay()];\n  }\n  const getNewData = (i: any) => {\n    let today = new Date();\n    return new Date(today.setDate(today.getDate() + i));\n  };\n  const arrCountDay = [0, 1, 2, 3, 4];\n  const allDayTemp = (numDayGet: any) => {\n    function getDaySet(el: any, getD: any) {\n      let dataArrTrans = new Date(el.dt * 1000);\n      dataArrTrans.setMilliseconds(-3 * 60 * 60 * 1000);\n      switch (getD) {\n        case \"d\":\n          return dataArrTrans.getDate();\n        case \"h\":\n          return dataArrTrans.getHours();\n        default:\n          return null;\n      }\n    }\n    const allDateTemp = list.filter((el: any) => {\n      return getDaySet(el, \"d\") === numDayGet;\n    });\n    const allDays = (a: any) =>\n      allDateTemp.filter((el: any) => {\n        return getDaySet(el, \"h\") === a;\n      });\n    const undefinedReq = (unfReq: any, paramReq: any) => {\n      if (allDays(unfReq).length < 1) {\n        return \"--\";\n      } else {\n        switch (paramReq) {\n          case \"icon\":\n            return allDays(unfReq)[0].weather[0].icon;\n          case \"temp\":\n            return Math.floor(allDays(unfReq)[0].main.temp - 272);\n          case \"humidity\":\n            return allDays(unfReq)[0].main.humidity;\n        }\n      }\n    };\n\n    return [\n      {\n        name: \"ночь\",\n        timeTwo: [\n          {\n            time: \"0:00\",\n            img: undefinedReq(0, \"icon\"),\n            temp: undefinedReq(0, \"temp\"),\n            humidity: undefinedReq(0, \"humidity\"),\n          },\n          {\n            time: \"3:00\",\n            img: undefinedReq(3, \"icon\"),\n            temp: undefinedReq(3, \"temp\"),\n            humidity: undefinedReq(3, \"humidity\"),\n          },\n        ],\n      },\n      {\n        name: \"утро\",\n        timeTwo: [\n          {\n            time: \"6:00\",\n            img: undefinedReq(6, \"icon\"),\n            temp: undefinedReq(6, \"temp\"),\n            humidity: undefinedReq(6, \"humidity\"),\n          },\n          {\n            time: \"9:00\",\n            img: undefinedReq(9, \"icon\"),\n            temp: undefinedReq(9, \"temp\"),\n            humidity: undefinedReq(9, \"humidity\"),\n          },\n        ],\n      },\n      {\n        name: \"день\",\n        timeTwo: [\n          {\n            time: \"12:00\",\n            img: undefinedReq(12, \"icon\"),\n            temp: undefinedReq(12, \"temp\"),\n            humidity: undefinedReq(12, \"humidity\"),\n          },\n          {\n            time: \"15:00\",\n            img: undefinedReq(15, \"icon\"),\n            temp: undefinedReq(15, \"temp\"),\n            humidity: undefinedReq(15, \"humidity\"),\n          },\n        ],\n      },\n      {\n        name: \"вечер\",\n        timeTwo: [\n          {\n            time: \"18:00\",\n            img: undefinedReq(18, \"icon\"),\n            temp: undefinedReq(18, \"temp\"),\n            humidity: undefinedReq(18, \"humidity\"),\n          },\n          {\n            time: \"21:00\",\n            img: undefinedReq(21, \"icon\"),\n            temp: undefinedReq(21, \"temp\"),\n            humidity: undefinedReq(21, \"humidity\"),\n          },\n        ],\n      },\n    ];\n  };\n  /////one call\n  const getNewDataOneCall = (i: any) => {\n    let today = new Date();\n    return new Date(today.setDate(today.getDate() + i));\n  };\n  const allDayTempOneCall = (numDayGet: any) => {\n    return arrOneCall.daily.filter((el: any) => {\n      let dataReturn = new Date(el.dt * 1000);\n\n      return dataReturn.getDate() === numDayGet;\n    });\n  };\n  /////\n  return arrCountDay.map((num) => {\n    //текущий день\n    const dateDays = getNewData(num);\n    //номер дня\n    const numDayGet = dateDays.getDate();\n    //имя дня\n    const nameToday = getWeekDay(dateDays);\n    //температура на весь день\n    let tempAllDay = allDayTemp(numDayGet);\n\n    //////////// one call\n    const dateDaysOneCall = getNewDataOneCall(num);\n    // //номер дня\n    const numDayGetOneCall = dateDaysOneCall.getDate();\n\n    let tempAllDayOneCall = allDayTempOneCall(numDayGetOneCall)[0];\n    return {\n      yearsNum: dateDays.getFullYear().toString().substr(-2),\n      numMonth: dateDays.getMonth() + 1,\n      numDay: numDayGet,\n      nameDay: nameToday,\n      tempToday: Math.floor(tempAllDayOneCall.temp.day - 272),\n      img: tempAllDayOneCall.weather[0].icon,\n      likeTemp: Math.floor(tempAllDayOneCall.feels_like.day - 272),\n      winter: tempAllDayOneCall.wind_deg,\n      speedWinter: tempAllDayOneCall.wind_speed,\n      humidity: tempAllDayOneCall.humidity,\n      pressure: tempAllDayOneCall.pressure,\n      //массив с теспературой за весь текущий день\n      temp: tempAllDay,\n    };\n  });\n}\n","import { transformArr } from \"../components/data/transformArr\";\r\nimport { arrayAllDays } from \"./../components/data/arrayAllDays\";\r\ntype testDaysWeather = {\r\n  day: string;\r\n  num: number;\r\n  month: string;\r\n  numMonth: any;\r\n  img: string;\r\n  tMin: number;\r\n  tMax: number;\r\n};\r\ntype timeTwo = {\r\n  time: string;\r\n  img: string;\r\n  temp: string;\r\n  humidity: string;\r\n};\r\ntype miniTempType = {\r\n  name: string;\r\n  timeTwo: Array<timeTwo>;\r\n};\r\ntype typeAllDaysArr = {\r\n  yearsNum: any;\r\n  numDay: number;\r\n  numMonth: any;\r\n  nameDay: any;\r\n  tempToday: any;\r\n  likeTemp: any;\r\n  img: string;\r\n  winter: any;\r\n  speedWinter: any;\r\n  humidity: any;\r\n  pressure: any;\r\n  temp: Array<miniTempType>;\r\n};\r\ntype typeState = {\r\n  dataDays: any;\r\n  dataOneCall: any;\r\n  arrTopW: testDaysWeather | any;\r\n  cityName: string;\r\n  allDays: Array<typeAllDaysArr> | null;\r\n  page: any;\r\n  oneDayData: any;\r\n};\r\nlet initialState: typeState = {\r\n  dataDays: null,\r\n  dataOneCall: null,\r\n  arrTopW: [\r\n    {\r\n      day: \"понедельник\",\r\n      img: `https://openweathermap.org/img/wn/02d@2x.png`,\r\n      month: \"сентябрь\",\r\n      numMonth: 12,\r\n      num: 14,\r\n      tMax: 24,\r\n      tMin: 14,\r\n    },\r\n  ],\r\n  cityName: \"Киев\",\r\n  allDays: null,\r\n  page: 1,\r\n  oneDayData: null,\r\n};\r\nexport default function rootReducer(\r\n  state: typeState = initialState,\r\n  action: any\r\n) {\r\n  switch (action.type) {\r\n    case \"CREATE_DATE\":\r\n      return {\r\n        ...state,\r\n        dataDays: action.data[0],\r\n        dataOneCall: action.data[1],\r\n        arrTopW: transformArr(action.data[1]),\r\n        allDays: arrayAllDays(action.data[0], action.data[1]),\r\n      };\r\n    case \"FIND_CITY\": {\r\n      return {\r\n        ...state,\r\n        dataDays: action.dataF[0],\r\n        dataOneCall: action.dataF[1],\r\n        arrTopW: transformArr(action.dataF[1]),\r\n        cityName: action.cName,\r\n        allDays: arrayAllDays(action.dataF[0], action.dataF[1]),\r\n      };\r\n    }\r\n    case \"FIND_DAY\": {\r\n      let datDataW = state.oneDayData;\r\n      if (state.allDays !== null) {\r\n        datDataW = state.allDays.filter(\r\n          (el: any) => el.numDay === +action.numDay\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        page: action.numDay,\r\n        oneDayData: datDataW,\r\n      };\r\n    }\r\n    case \"DATA_DAY\": {\r\n      console.log(\"hellosssss\");\r\n      if (state.allDays !== null) {\r\n        let datDataW = state.allDays.filter(\r\n          (el: any) => el.numDay === +state.page\r\n        );\r\n        let a = state.allDays.filter((el: any) => el.numDay === +state.page);\r\n        if (a.length === 0) {\r\n          let newPage = state.allDays[0].numDay;\r\n          return {\r\n            ...state,\r\n            page: newPage,\r\n            oneDayData: state.allDays.filter(\r\n              (el: any) => el.numDay === +newPage\r\n            ),\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            oneDayData: datDataW,\r\n          };\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./redux/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}